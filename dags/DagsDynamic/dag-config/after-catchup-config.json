{
    "DagId": "AfterCatchUp_Automated",
    "t1": "GetAndInsertApiDataAfterCatchUp",
    "t2": "CreateJoinTableOfAfterCatchUp",
    "URL-HERE": "http://idims.eoc.gov.pk/api_who/api/get_allaftercatchup/5468XE2LN6CzR7qRG041/1/2022",
    "query-create-api_table": " Create Table if not exists test.get_after_catch_up (ID Int32, UserName String, IDcampCat Int32, ActivityID Int32, TimeStamp String, Yr Int32, TehsilID Int32, UCID Int32, DistID Int32, DivID Int32, ProvID Int32, Cday Int32,VaccinationDate String,ACCovNA011 Int32, ACCovNA1259 Int32, ACCovRef011 Int32, ACCovRef1259 Int32, ACOutofH011 Int32, ACOutofH1259 Int32, ACGuests Int32, ACCovMob Int32, ACNewBorn Int32, PersistentlyMC Int32, PersistentlyMCHRMP Int32, ACAlreadyVaccinated Int32, UnRecCov Int32, OPVGiven Int32, OPVUsed Int32, OPVReturned Int32, status Int32, trash Int32, isSync Int32, fm_issued Int32, fm_retrieved Int32, Remarks String, location_code Int32 NULL)ENGINE = MergeTree PRIMARY KEY ID ORDER BY ID",
    "query-get-api_table": "SELECT * FROM test.get_after_catch_up",
    "query-insert-into_api_table": "INSERT INTO test.get_after_catch_up VALUES",
    "query-create-xbi_table": "CREATE TABLE if not exists test.xbi_after_catchUp (ID Int32, UserName String, IDcampCat Int32, ActivityID Int32, TimeStamp String, Yr Int32, TehsilID Int32, UCID Int32, DistID Int32, DivID Int32, ProvID Int32, Cday Int32, VaccinationDate String, ACCovNA011 Int32, ACCovNA1259 Int32, ACCovRef011 Int32, ACCovRef1259 Int32, ACOutofH011 Int32, ACOutofH1259 Int32, ACGuests Int32, ACCovMob Int32, ACNewBorn Int32, PersistentlyMC Int32, PersistentlyMCHRMP Int32, ACAlreadyVaccinated Int32,  UnRecCov Int32, OPVGiven Int32, OPVUsed Int32, OPVReturned String, status Int32, trash Int32, isSync Int32,fm_issued Int32,fm_retrieved Int32, Remarks String, location_code Int32 NULL, campaign_ID Int32, campaign_ActivityName String, campaign_ActivityID_old Int32, campaign_Yr Int32, campaign_SubActivityName String,  location_ID Int32, location_code Int32, location_name String, location_type String, location_target Int32, location_status Int32, location_priority String, hr_status String)ENGINE = MergeTree PRIMARY KEY ID ORDER BY ID",
    "xbi_columns-names": "test.get_after_catch_up.ID, test.get_after_catch_up.UserName, test.get_after_catch_up.IDcampCat, test.get_after_catch_up.ActivityID, test.get_after_catch_up.TimeStamp, test.get_after_catch_up.Yr, test.get_after_catch_up.TehsilID, test.get_after_catch_up.UCID, test.get_after_catch_up.DistID, test.get_after_catch_up.DivID, test.get_after_catch_up.ProvID, test.get_after_catch_up.Cday, test.get_after_catch_up.VaccinationDate,test.get_after_catch_up.ACCovNA011, test.get_after_catch_up.ACCovNA1259, test.get_after_catch_up.ACCovRef011, test.get_after_catch_up.ACCovRef1259, test.get_after_catch_up.ACOutofH011, test.get_after_catch_up.ACOutofH1259, test.get_after_catch_up.ACGuests, test.get_after_catch_up.ACCovMob, test.get_after_catch_up.ACNewBorn, test.get_after_catch_up.PersistentlyMC, test.get_after_catch_up.PersistentlyMCHRMP, test.get_after_catch_up.ACAlreadyVaccinated, test.get_after_catch_up.UnRecCov, test.get_after_catch_up.OPVGiven, test.get_after_catch_up.OPVUsed, test.get_after_catch_up.OPVReturned,test.get_after_catch_up.status, test.get_after_catch_up.trash, test.get_after_catch_up.isSync,test.get_after_catch_up.fm_issued, test.get_after_catch_up.fm_retrieved,test.get_after_catch_up.Remarks, test.get_after_catch_up.location_code, test.xbi_campaign.campaign_ID, test.xbi_campaign.campaign_ActivityName, test.xbi_campaign.campaign_ActivityID_old, test.xbi_campaign.campaign_Yr, test.xbi_campaign.campaign_SubActivityName, test.xbi_geolocation.ID, test.xbi_geolocation.code, test.xbi_geolocation.name, test.xbi_geolocation.type, test.xbi_geolocation.location_target, test.xbi_geolocation.location_status, test.xbi_geolocation.location_priority, test.xbi_geolocation.hr_status",
    "query-joined_table": " FROM test.get_after_catch_up eoc_1 left JOIN test.xbi_geolocation eoc_2 ON eoc_1.location_code  = eoc_2.code left join test.xbi_campaign eoc_3 ON (eoc_1.ActivityID  = eoc_3.campaign_ActivityID_old And eoc_1.Yr = eoc_3.campaign_Yr)",
    "all-column-names": "'ID', 'UserName', 'IDcampCat', 'ActivityID', 'TimeStamp', 'Yr', 'TehsilID', 'UCID', 'DistID', 'DivID', 'ProvID', 'Cday', 'VaccinationDate', 'ACCovNA011', 'ACCovNA1259', 'ACCovRef011', 'ACCovRef1259', 'ACOutofH011', 'ACOutofH1259', 'ACGuests', 'ACCovMob', 'ACNewBorn', 'PersistentlyMC', 'PersistentlyMCHRMP', 'ACAlreadyVaccinated',  'UnRecCov', 'OPVGiven', 'OPVUsed', 'OPVReturned', 'status', 'trash', 'isSync','fm_issued','fm_retrieved', 'Remarks', 'location_code', 'campaign_ID', 'campaign_ActivityName', 'campaign_ActivityID_old', 'campaign_Yr', 'campaign_SubActivityName', 'location_ID', 'location_code', 'location_name', 'location_type', 'location_target', 'location_status', 'location_priority', 'hr_status'  ",
    "query-get-xbi_table": "SELECT * FROM test.xbi_after_catchUp",
    "query-insert-xbi_table": "INSERT INTO test.xbi_after_catchUp  VALUES",
    "query-drop-api_table": "DROP table if exists test.get_after_catch_up",
    "query-drop-xbi_table": "DROP TABLE test.xbi_after_catchUp",
    "primary-key": "ID",
    "logger-file_name": "After_CatchUp.log"
}